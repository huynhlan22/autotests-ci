name: Android Automation

on:
  push:
    branches:
      - update_action
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Android Automation Test
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29, 30, 31]

    steps:
      # - name: Set Up Homebrew
      #   uses: Homebrew/actions/setup-homebrew@master

      - name: Checkout Automation Code
        uses: actions/checkout@v4

      # - name: Set Up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.12.0"

      # - name: Create and Activate Venv
      #   run: |
      #     python3 -m venv venv
      #     source venv/bin/activate

      # - name: Install Appium
      #   run: |
      #     npm i --location=global appium
      #     appium driver install xcuitest
      #   shell: bash

      - name: Environment Setup
        uses: ./.github/actions/setup

      - name: Install Android Platform
        run: |
          brew update
          brew install android-platform-tools

      - name: Set Up Environment Variables
        run: |
          echo 'export ANDROID_HOME=~/Library/Android/sdk' >> $HOME/.bashrc
          echo 'export PATH=$PATH:$ANDROID_HOME/tools/bin' >> $HOME/.bashrc
          echo 'export PATH=$PATH:$ANDROID_HOME/platform-tools' >> $HOME/.bashrc
          echo 'export PATH=$PATH:/usr/local/lib/android/sdk/platform-tools' >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: Update Android SDK
        run: source $HOME/.bashrc && $ANDROID_HOME/tools/bin/sdkmanager --update

      - name: Accept Android Licenses
        run: yes | source $HOME/.bashrc && $ANDROID_HOME/tools/bin/sdkmanager --licenses

      # - name: Install Dependencies
      #   run: pip install -r requirements.txt

      - name: Download APK File
        run: |
          wget -O application.apk ${{ vars.ANDROID_BUILD_URL }}
          mkdir -p App
          mv application.apk App/

      - name: AVD Cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29

      - name: Start Appium Server
        run: appium &

      - name: Create AVD and Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: |
            adb devices
            adb install -r App/application.apk
            robot -d Reports --loglevel TRACE UiTests/TestSuite.robot

      - name: Archive Test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Android Automation Reports
          path: Reports

      - name: Stop Appium Server
        run: pkill -f appium

      - name: Clean up
        run: |
          rm -rf /tmp/appium*
          rm -rf ~/.android/avd/*
          rm -rf ~/.android/adb*
          rm -f App/application.apk
          rm -rf venv
