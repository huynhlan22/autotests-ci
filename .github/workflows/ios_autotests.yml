name: iOS Automation

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # lint-typecheck:
  #   name: ⬣ ESLint & Type check
  #   runs-on: macos-13
  #   steps:
  #     - name: 🛑 Cancel previous runs
  #       uses: styfle/cancel-workflow-action@0.12.0

  #     - name: Set Up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.9"

  #     - name: Checkout Automation Code
  #       uses: actions/checkout@v4

  #     - name: Install Dependencies
  #       run: |
  #         pip install -r requirements.txt
  #         pip install pylint
  #         pip install mypy
  #         pip install robotframework-lint

  #     - name: 🔬 Lint
  #       run: |
  #         pylint python_code/*
  #         find . -type f -name "*.robot" -exec rflint {} \;

  #     - name: 🔎 Type check
  #       run: mypy python_code/*

  # autotests-first-version:
  #   name: iOS ${{ vars.IOS_FIRST_DEVICE_VERSION }} Automation
  #   runs-on: ${{ vars.IOS_FIRST_VM }}

  #   steps:
  #     - name: Checkout Automation Code
  #       uses: actions/checkout@v4

  #     - name: Environment Setup
  #       uses: ./.github/actions/setup

  #     - name: iOS Environment Setup
  #       uses: ./.github/actions/ios/setup
  #       with:
  #         ios-download-build: "${{ vars.IOS_BUILD_URL }}"
  #         ios-model: "${{ vars.IOS_FIRST_DEVICE_MODEL }}"
  #         ios-version: ${{ vars.IOS_FIRST_DEVICE_VERSION }}

  #     - name: Execute Automation Tests
  #       uses: ./.github/actions/ios/autotests
  #       with:
  #         ios-model: ${{ vars.IOS_FIRST_DEVICE_MODEL }}
  #         ios-version: ${{ vars.IOS_FIRST_DEVICE_VERSION }}

  #     - name: Workflow Teardown
  #       uses: ./.github/actions/ios/teardown

  # autotests-second-version:
  #   name: iOS ${{ vars.IOS_SECOND_DEVICE_VERSION }} Automation
  #   runs-on: ${{ vars.IOS_SECOND_VM }}

  #   steps:
  #     - name: Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.12.0

  #     - name: Checkout Automation Code
  #       uses: actions/checkout@v4

  #     - name: Environment Setup
  #       uses: ./.github/actions/setup

  #     - name: iOS Environment Setup
  #       uses: ./.github/actions/ios/setup
  #       with:
  #         ios-download-build: "${{ vars.IOS_BUILD_URL }}"
  #         ios-model: "${{ vars.IOS_SECOND_DEVICE_MODEL }}"
  #         ios-version: ${{ vars.IOS_SECOND_DEVICE_VERSION }}

  #     - name: Execute Automation Tests
  #       uses: ./.github/actions/ios/autotests
  #       with:
  #         ios-model: ${{ vars.IOS_SECOND_DEVICE_MODEL }}
  #         ios-version: ${{ vars.IOS_SECOND_DEVICE_VERSION }}

  #     - name: Workflow Teardown
  #       uses: ./.github/actions/ios/teardown

  # autotests-third-version:
  #   name: iOS ${{ vars.IOS_THIRD_DEVICE_VERSION }} Automation
  #   runs-on: ${{ vars.IOS_THIRD_VM }}

  #   steps:
  #     - name: Checkout Automation Code
  #       uses: actions/checkout@v4

  #     - name: Environment Setup
  #       uses: ./.github/actions/setup

  #     - name: iOS Environment Setup
  #       uses: ./.github/actions/ios/setup
  #       with:
  #         ios-download-build: "${{ vars.IOS_BUILD_URL }}"
  #         ios-model: "${{ vars.IOS_THIRD_DEVICE_MODEL }}"
  #         ios-version: ${{ vars.IOS_THIRD_DEVICE_VERSION }}

  #     - name: Execute Automation Tests
  #       uses: ./.github/actions/ios/autotests
  #       with:
  #         ios-model: ${{ vars.IOS_THIRD_DEVICE_MODEL }}
  #         ios-version: ${{ vars.IOS_THIRD_DEVICE_VERSION }}

  #     - name: Workflow Teardown
  #       uses: ./.github/actions/ios/teardown

  autotests-full-workflow:
    name: iOS Automation Test
    runs-on: macos-13
    env:
      FW_IOS_MODEL: iPhone 14
      FW_IOS_VERSION: 17.0

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.0

      # - name: 🛠️ Setup Expo # pre-requisite for building the app
      #   uses: expo/expo-github-action@v8
      #   with:
      #     expo-version: latest
      #     eas-version: latest
      #     token: ${{ secrets.EXPO_TOKEN }}

      # - name: Checkout Application Code # pre-requisite for building the app
      #   uses: actions/checkout@v4
      #   with:
      #     repository: huynhlan21/test
      #     ref: build
      #     path: App

      # - name: Build for iOS Similators # to build the app for simulator
      #   run: |
      #     cd App
      #     npm i
      #     eas build --profile simulator --platform ios
      #     eas build:list --json --non-interactive --limit=1 --platform=ios | jq -r .[0].artifacts.buildUrl
      #     echo "ios-download-build=$(eas build:list --json --non-interactive --limit=1 --platform=ios | jq -r .[0].artifacts.buildUrl)" >> $GITHUB_ENV

      - name: Set Up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Set Up Xcode
        run: sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

      - name: Install Appium
        run: |
          npm i --location=global appium
          appium driver install xcuitest
          npm i appium-webdriveragent

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.0"

      - name: Import Signing Certificate
        run: echo ${{ secret.APPLE_CERTIFICATE }} | base64 --decode > certificate.p12

      - name: Set up Keychain
        run: |
          security create-keychain -p mysecretpassword build.keychain
          security import certificate.p12 -k ~/Library/Keychains/build.keychain -P ${{ secret.APPLE_CERTIFICATE_PASSWORD }} -T /usr/bin/codesign
          security set-keychain-settings -lut 7200 build.keychain
          security unlock-keychain -p mysecretpassword build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k mysecretpassword build.keychain

      - name: Build WebDriverAgent
        run: |
          cd ./node_modules/appium-webdriveragent
          xcodebuild -project WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner \
          -destination 'platform=iOS Simulator,OS=${{ env.FW_IOS_VERSION }},name=${{ env.FW_IOS_MODEL }}' \
          -allowProvisioningUpdates \
          DEVELOPMENT_TEAM=YPJC3HU39N \
          build

      - name: Test WebDriverAgent on Simulator
        run: |
          cd ./node_modules/appium-webdriveragent
          xcodebuild -project WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -destination 'platform=iOS Simulator,OS=${{ env.FW_IOS_VERSION }},name=${{ env.FW_IOS_MODEL }}' test

      # - name: Verify Xcode Installation
      #   run: xcodebuild -version -sdk

      # - name: Check Available Simulators
      #   run: xcrun simctl list devices

      - name: Checkout Automation Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Start Appium Server
        run: appium &

      - name: Download and Extract iOS Build
        run: |
          mkdir -p App
          wget -O ios_build.tar.gz ${{ vars.IOS_BUILD_URL }}
          mv ios_build.tar.gz App/
          cd App
          tar -xzf ios_build.tar.gz

      - name: Set Up iOS Simulator
        id: setup-simulator
        uses: futureware-tech/simulator-action@v3
        with:
          model: "${{ env.FW_IOS_MODEL }}"
          os_version: ${{ env.FW_IOS_VERSION }}

      - name: Set Environment Variables for Simulator
        id: set-env-simulator
        run: echo "SIMULATOR_UDID=${{ steps.setup-simulator.outputs.udid }}" >> $GITHUB_ENV

      - name: Modify iOS UDID
        run: |
          python3 - <<EOF
          file_path = 'Resources/Locators/CommonLocators_ios.robot'
          read_file = open(file_path, 'r')
          file_content = read_file.read()
          modify_content = file_content.replace("iphone_device_udid", "${{ env.SIMULATOR_UDID }}") \
                .replace("iphone_device_model", "${{ env.FW_IOS_MODEL }}") \
                .replace("iphone_device_version", "${{ env.FW_IOS_VERSION }}")
          read_file.close()
          modify_file = open(file_path, 'w')
          modify_file.write(modify_content)
          modify_file.close()
          exit()
          EOF

      - name: Run and Test on iOS Simulator
        run: |
          xcrun simctl install "${{ env.SIMULATOR_UDID }}" "App/test.app"
          robot -d Reports/ios_${{ env.FW_IOS_VERSION }} --loglevel TRACE UiTests/TestSuite_ios.robot

      - name: Archive Test Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: iOS ${{ env.FW_IOS_VERSION }} Automation Reports
          path: Reports/ios_${{ env.FW_IOS_VERSION }}

      - name: Workflow Teardown
        uses: ./.github/actions/ios/teardown
